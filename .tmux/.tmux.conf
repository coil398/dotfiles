# prefixキーをC-qに変更する
set -g prefix C-q

# C-bのキーバインドを解除する
unbind C-b

# キーストロークのディレイを減らす
set -sg escape-time 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# C-a*2でtmux内のプログラムにC-aを送る
bind C-a send-prefix

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r O resize-pane -R 50
bind -r P resize-pane -R 100

# マウス操作を有効にする
setw -g mouse on

# 256色端末を使用する
set -g default-terminal "screen-256color"
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# ステータスバーの色を設定する
set -g status-fg white
set -g status-bg black

# ウィンドウリストの色を設定する
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim
# アクティブなウィンドウを目立たせる
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
set -g pane-border-fg green
set -g pane-border-bg black
# アクティブなペインを目立たせる
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
## 右パネルを設定する
set -g status-right-length 120
set -g status-right "#[fg=white] #(tmux-mem-cpu-load --interval 1 --averages-count 0) #[fg=red]#(cpu_temp) #[fg=green]#(get_gpu_temp 2)#(get_gpu_temp 3) #[fg=yellow]#(wifi)#[default] #(get_battery -t) #[fg=cyan][%Y-%m-%d(%a) %H:%M]"
## リフレッシュの間隔を設定する(デフォルト 15秒)
set -g status-interval 1
## ウィンドウリストの位置を中心寄せにする
set -g status-justify centre
## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on
## ステータスバーを上部に表示する
set -g status-position top
## Colorscheme: Solarized

# Default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# Pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# Message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# Pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Clock
set-window-option -g clock-mode-colour colour64 #green
#

# Vi キーバインド
set-window-option -g mode-keys vi

if-shell 'test "$(uname -s)" = Darwin' "source-file $HOME/dotfiles/.tmux/.tmux.conf.mac"
if-shell 'test "$(uname -s)" = Linux' "source-file $HOME/dotfiles/.tmux/.tmux.conf.linux"

# Prefix+v でコピーモード開始
# bind-key v copy-mode \; display "Copy mode!"
# bind-key -t vi-copy v begin-selection

# Prefix+Enter/y でコピー
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy y     copy-pipe "reattach-to-user-namespace pbcopy"

# Prefix+p でペースト
# クリップボードにも保存されているので Cmd-v でもペースト可能
# bind-key p paste-buffer

# vim <=> tmux 間でクリップボード利用を可能にする
# set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Esc キーでコピーの反転を解除（コピーモードは抜けない）
# bind-key -t vi-copy Escape clear-selection
# Ctrl-c キーでコピーの反転を解除し、コピーモードから抜ける
#"bind-key -t vi-copy C-c　　 cancel

# コピーモード中（Prefix+v 後）C-v で矩形選択開始
#bind-key -t vi-copy C-v 　　rectangle-toggle
# 1行選択
#bind-key -t vi-copy V 　　　select-line

# Vi モード中に Ctrl-a で行頭に（Emacs ライク）
#bind-key -t vi-copy C-a 　　start-of-line
# Vi モード中に Ctrl-e で行末に（Emacs ライク）
#bind-key -t vi-copy C-e 　　end-of-line

# 単語の最初の1文字に移動
#bind-key -t vi-copy w 　　　next-word
# 単語の最後の1文字に移動
#bind-key -t vi-copy e 　　　next-word-end
# w の逆の動き back
#bind-key -t vi-copy b 　　　previous-word

# 画面上に映る最上行に移動
#bind-key -t vi-copy g 　　　top-line
# 画面上に映る最下行に移動
#bind-key -t vi-copy G 　　　bottom-line

# 前方検索
#bind-key -t vi-copy / 　　　search-forward
# 後方検索
#bind-key -t vi-copy ? 　　　search-backward

# ページスクロール
#bind-key -t vi-copy C-n　　 page-up
#bind-key -t vi-copy C-f 　　page-down
# ページ送り
#bind-key -t vi-copy C-u 　　scroll-up
#bind-key -t vi-copy C-d 　　scroll-down

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
